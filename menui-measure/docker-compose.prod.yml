version: '3.8'

services:
  # Base de donn√©es MySQL
  db:
    image: mysql:8.0
    container_name: menui-db-prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/custom.cnf:ro
    networks:
      - menui-network
    ports:
      - "127.0.0.1:3306:3306"

  # Cache Redis
  redis:
    image: redis:7-alpine
    container_name: menui-redis-prod
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - menui-network
    ports:
      - "127.0.0.1:6379:6379"

  # Service IA Python/FastAPI
  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
    container_name: menui-ai-service-prod
    restart: unless-stopped
    volumes:
      - ai_uploads:/app/uploads
      - ai_processed:/app/processed
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - menui-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Application Laravel
  laravel:
    build:
      context: ./laravel-app
      dockerfile: Dockerfile.prod
    container_name: menui-laravel-prod
    restart: unless-stopped
    volumes:
      - laravel_storage:/var/www/html/storage
      - laravel_public:/var/www/html/public/storage
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_HOST=db
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - AI_SERVICE_URL=http://ai-service:8000
    depends_on:
      - db
      - redis
      - ai-service
    networks:
      - menui-network

  # Queue Worker Laravel
  laravel-queue:
    build:
      context: ./laravel-app
      dockerfile: Dockerfile.prod
    container_name: menui-queue-prod
    restart: unless-stopped
    command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600
    volumes:
      - laravel_storage:/var/www/html/storage
      - laravel_public:/var/www/html/public/storage
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_HOST=db
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - AI_SERVICE_URL=http://ai-service:8000
    depends_on:
      - db
      - redis
    networks:
      - menui-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: menui-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/sites:/etc/nginx/conf.d:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
      - laravel_public:/var/www/html/public/storage:ro
    depends_on:
      - laravel
    networks:
      - menui-network

networks:
  menui-network:
    driver: bridge

volumes:
  db_data:
    driver: local
  redis_data:
    driver: local
  ai_uploads:
    driver: local
  ai_processed:
    driver: local
  laravel_storage:
    driver: local
  laravel_public:
    driver: local
